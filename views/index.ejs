<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Port Essential Tool</title>

  <!-- Google Font for a modern look -->
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500&display=swap" rel="stylesheet">

  <!-- Link to external CSS -->
  <link rel="stylesheet" href="/css/styles.css">

  <!-- SortableJS for drag-and-drop functionality -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.14.0/Sortable.min.js"></script>
</head>
<body>
  <div class="container">
    <header>
      <h1>Port Essential Tool</h1>
    </header>
    
    <!-- XML File Upload -->
    <input type="file" id="xmlUpload" accept=".xml" />
    <br/><br/>

    <!-- Form for both XML and PDF generation -->
    <form id="portForm" method="POST" enctype="multipart/form-data">  <!-- enctype added for file upload -->
      
      <!-- Location: City and Country -->
      <div id="location">
        <div class="city">
          <label for="city">City</label>
          <input type="text" id="city" name="city" placeholder="" required>
        </div>
        <div class="country">
          <label for="country">Country</label>
          <input type="text" id="country" name="country" placeholder="" required>
        </div>
      </div>

      <!-- Points of Interest (draggable) -->
      <h3>Points of Interest</h3>
      <div id="poiList">
        <% for (let i = 1; i <= 10; i++) { %>
          <div class="poi-section" id="poi<%= i %>">
            <div class="drag-handle"></div> <!-- Drag handle -->
            <div class="poi-number"><%= i %>.</div>
            
            <!-- POI Content -->
            <div class="poi-content">
              <div class="poi-inputs">
                <div class="poi-name">
                  <label for="poiName<%= i %>">Name</label>
                  <input type="text" id="poiName<%= i %>" name="poiName<%= i %>" placeholder="">
                </div>

                <div class="poi-distance">
                  <label for="poiDistance<%= i %>">Distance</label>
                  <input type="text" id="poiDistance<%= i %>" name="poiDistance<%= i %>" placeholder="">
                </div>
              </div>

              <div class="poi-description">
                <label for="poiDescription<%= i %>">Description</label>
                <textarea id="poiDescription<%= i %>" name="poiDescription<%= i %>" rows="2" placeholder=""></textarea>
              </div>
            </div>
          </div>
        <% } %>
      </div>

      <!-- PNG File Upload for PDF -->
      <div class="png-upload">
        <label for="pngFile">Upload PNG File (for PDF)</label>
        <input type="file" id="pngFile" name="pngFile" accept="image/png">
      </div>

      <!-- Submit Buttons for XML and PDF -->
      <button type="submit" formaction="/save-as-xml">Save as XML</button>
      <button type="submit" formaction="/save-as-pdf">Save as PDF</button>
    </form>
  </div>

  <!-- Script to initialize SortableJS and renumber the items -->
  <script>
    const poiList = document.getElementById('poiList');
    console.log('poiList element:', poiList); // Debugging log

    // Initialize SortableJS
    const sortable = new Sortable(poiList, {
      animation: 150,
      ghostClass: 'sortable-ghost',
      handle: '.drag-handle', // Only the drag handle triggers the dragging
      onEnd: function () {
        renumberPOIs();
      }
    });

    // Function to renumber the POI items
    function renumberPOIs() {
      const poiNumbers = document.querySelectorAll('.poi-number');
      poiNumbers.forEach((number, index) => {
        number.textContent = (index + 1) + '.'; // Update the number based on the order
      });
    }

    // Initial renumbering
    renumberPOIs();

    // Handling XML File Upload
    document.getElementById('xmlUpload').addEventListener('change', function(event) {
      const file = event.target.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = function(e) {
        const parser = new DOMParser();
        const xmlDoc = parser.parseFromString(e.target.result, "text/xml");

        // Populate City and Country fields
        document.getElementById('city').value = xmlDoc.getElementsByTagName('City')[0].textContent;
        document.getElementById('country').value = xmlDoc.getElementsByTagName('Country')[0].textContent;

        // Populate POIs
        const pois = xmlDoc.getElementsByTagName('POI');
        for (let i = 0; i < pois.length; i++) {
          document.getElementById(`poiName${i + 1}`).value = pois[i].getElementsByTagName('PointOfInterest')[0].textContent;
          document.getElementById(`poiDistance${i + 1}`).value = pois[i].getElementsByTagName('Distance')[0].textContent;
          document.getElementById(`poiDescription${i + 1}`).value = pois[i].getElementsByTagName('POIDescription')[0].textContent;
        }
      };

      reader.readAsText(file);
    });
  </script>
</body>
</html>
